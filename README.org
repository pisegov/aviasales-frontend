#+title: Тестовое задание для Effective Mobile

#+html: <a href>
#+html:   <img src="assets/screencast.gif" width="180"/>
#+html: </a>
#+html: <a href>
#+html:   <img src="assets/1.jpg" width="180"/>
#+html:   <img src="assets/2.jpg" width="180"/>
#+html:   <img src="assets/3.jpg" width="180"/>
#+html:   <img src="assets/4.jpg" width="180"/>
#+html:   <img src="assets/5.jpg" width="180"/>
#+html: </a>
* Суть задания
Разработать фронтенд приложения для поиска дешевых авиабилетов

* Инструкция по запуску
- Для сборки использовать Android Studio Iguana 2023.2.1 Patch 2 или новее
  - Версия Android Gradle Pluging не ниже 8.3.2

- В файл ~local.properties~ в корне проекта положить в константу ~BASE_URL~ любой валидный хост
#+begin_src
BASE_URL="https://myaxa.com"
#+end_src

- Собрать приложение

* Описание реализации
Состоит из 4 страниц
1. Главный экран
2. Модальное окно поиска
3. Поиск. Выбрано место
4. Посмотреть все билеты

** Главный экран
- Отображается карточка поиска и список предложений

*** Карточка поиска
- Текст в поле прибытия сохраняется в Shared Preferences и восстанавливается при повторном входе
- При клике на поле прибытия открывается модальное окно поиска
- Для ввода текста в оба поля доступна только кириллица

*** Список предложений
- Данные получены из ответа сервера
- Картинки лежат в ресурсах приложения и выставляются по соответствующим id

** Модальное окно поиска
- При открытии фокусируется поле для ввода места прибытия и открывается системная клавиатура
- Для полей ввода отправления и прибытия реализованы кнопки очистки текста
- При выставлении текста в поле прибытия просходит переход на экран 3 (Поиск. Выбрано место)


- По клику на подсказки происходит переход на заглушку
  - По клику на подсказку "Куда угодно" текст выставляется в поле прибытия


- Данные для списка предложений -- хардкод
** Поиск. Выбрано место
- Данные для списка предложений получены из ответа сервера
- По нажатию на кнопку "Посмотреть все билеты" происходит переход на экран 4 (Посмотреть все билеты)
- Элемент "Подписка на цену" не функциональный

*** Карточка поиска
- Реализована кнопка для перехода назад на главный экран
- Реализована кнопка, которая меняет место прибытия и место отправления местами
- Реализована кнопка очистки места прибытия

*** Карусель кнопок
- По клику на кнопку с датой отображается нативный календарь с возможностью выбрать дату, соответствующая дата подставится в текст кнопки
- При нажатии на кнопку "обратно" также отображается календарь, но выбранная дата не используется
- Остальные элементы не функциональные

** Посмотреть все билеты
- Реализовано скрытие и показ верхней панели и нижних кнопок при скролле списка билетов
- Реализована кнопка для перехода назад на предыдущий экран
- В верхней панельке отображаются ранее введенные пользователем данные
- Данные для списка билетов получены из ответа сервера
- Нижние кнопки с фильтром и графиком цен не функциональные
** Общее
- Для получения ответов с сервера используется interceptor, который подменяет ответ на хардкод
- Полученные данные кэшируются в базу данных и из базы передаются на ui
- Приложение разделено на модули


* Использованные технологии и подходы
- Язык: Kotlin
- Работа с сетью: Retrofit, OkHttp
- Многопоточность: Kotlin Coroutines / Flow
- View: XML
- Сериализатор: Kotlinx Serialization
- Навигация: Fragment
- Архитектура презентационного слоя: MVVM
- DI: Dagger
- Загрузка изображений: Coil
- Списки: AdapterDelegates
- БД: Room, SQLite
